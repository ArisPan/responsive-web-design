h1 {
	text-align: center;
}

.container {
	padding: 10px 0px;
	background-color: rgb(255, 255, 255);
}

.marker {
	width: 200px;
	height: 25px;

	/* When the shorthand margin property has two values,
	it sets margin-top and margin-bottom to the first value,
	and margin-left and margin-right to the second value. */
	margin: 10px auto;
}

/* For a closer look on primary, secondary and tertiary colors check:
https://www.usability.gov/how-to-and-tools/methods/color-basics.html */

/* For a deep dive in linear-gradient check:
https://developer.mozilla.org/en-US/docs/Web/CSS/gradient/linear-gradient */
.red {
	/* Color-stops allow you to fine-tune where colors are placed along the gradient line.
	They are a length unit like px or percentages that follow a color in the linear-gradient function */
	background: linear-gradient(180deg, rgb(122, 74, 14) 0%, rgb(245, 62, 113) 50%, rgb(162, 27, 27) 100%);

	/* The box-shadow property lets you apply one or more shadows around an element.
	The basic syntax is: [box-shadow: offsetX offsetY color;] */
	box-shadow: -5px -5px red;
}

.green {
	/* Even without the color-stops, the colors for the green marker transition at the same points as the red marker.
	The first color is at the start (0%), the second is in the middle (50%), and the last is at the end (100%) of the gradient line.
	The linear-gradient function automatically calculates these values for you, and places colors evenly along the gradient line by default. */
	background: linear-gradient(180deg, #55680D, #71F53E, #116C31);

	/* If a blurRadius value isn't included, it defaults to 0 and produces sharp edges.
	The higher the value of blurRadius, the greater the blurring effect is.
	The syntax is: [box-shadow: offsetX offsetY blurRadius color;] */
	box-shadow: 5px 5px 5px #3B7E20CC;	/* 3B for red, 7E for green, 20 for blue and CC for the alpha channel. */
}

/* HSL Color Model
The CSS hsl function accepts 3 values:
	* a number from 0 to 360 for hue,
	* a percentage from 0 to 100 for saturation,
	* and a percentage from 0 to 100 for lightness.
Hue: red is at 0 degrees, green is at 120 degrees, and blue is at 240 degrees.
Saturation is the intensity of a color from 0%, or gray, to 100% for pure color.
Lightness is how bright a color appears, from 0%, or complete black, to 100%, complete white, with 50% being neutral. */
.blue {
	background: linear-gradient(hsl(186, 76%, 16%), hsl(223, 90%, 60%), hsl(240, 56%, 42%));

	/* If you want to expand the shadow out further, you can use the optional spreadRadius value.
	The syntax is: [box-shadow: offsetX offsetY blurRadius spreadRadius color;] */
	box-shadow: 0px 0px 20px 0px hsla(223, 59%, 31%, 0.8);
}

.sleeve {
	width: 110px;
	height: 25px;

	/* With the CSS opacity property, you can control how opaque or transparent an element is.
	With the value 0, or 0%, the element will be completely transparent.
	At 1.0, or 100%, the element will be completely opaque like it is by default.
	Another way to achieve the same result is with the rgba() function. */
	background-color: white;
	opacity: 0.5;

	/* The following can be summarized as [border-left: width style color] */
	border-left-width: 10px;
	border-left-style: double;
	border-left-color: rgba(0, 0, 0, 75%);
}

.cap {
	width: 60px;
	height: 25px;
}

/* Because the default display property for div elements is block,
the new cap div is taking up the entire width of the marker, and is pushing the sleeve down to the next line.
So when two block elements are next to each other, they stack like actual blocks.
To position two div elements on the same line, set their display properties to inline-block. */
.sleeve, .cap {
	display: inline-block;
}